import { SlashCommandBuilder, CommandInteraction, PermissionFlagsBits } from 'discord.js';

const alertTemplates = {
  fire: 'üö® **ÁÅ´ÁÅΩÁô∫Áîü** üö®\n@everyone\n„Åü„Å†„Å°„Å´ÈÅøÈõ£„ÇíÈñãÂßã„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÈÅøÈõ£ÁµåË∑Ø„ÇíÁ¢∫Ë™ç„Åó„ÄÅËêΩ„Å°ÁùÄ„ÅÑ„Å¶Ë°åÂãï„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
  medical: 'üè• **ÊÄ•ÁóÖ‰∫∫Áô∫Áîü** üè•\n@everyone\nÊïëË≠∑Áè≠„ÅØËá≥ÊÄ•Êú¨ÈÉ®„Å∏ÈõÜÂêà„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇÂë®Âõ≤„ÅÆÊñπ„ÅØÊïëË≠∑Ê¥ªÂãï„Å´„ÅîÂçîÂäõ„Åè„Å†„Åï„ÅÑ„ÄÇ',
  weather: '‚õàÔ∏è **ËçíÂ§©Ë≠¶Â†±** ‚õàÔ∏è\n@everyone\nÂ§©ÂÄôÊÇ™Âåñ„ÅÆ„Åü„ÇÅ„ÄÅÂ±ãÂ§ñ„Åß„ÅÆ‰ºÅÁîª„ÅØ‰∏ÄÊôÇ‰∏≠Êñ≠„Åó„Åæ„Åô„ÄÇÂ±ãÂÜÖ„Å´ÂæÖÊ©ü„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ',
  lostchild: 'üë∂ **Ëø∑Â≠ê„ÅÆ„ÅäÁü•„Çâ„Åõ** üë∂\n@everyone\nËø∑Â≠ê„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇÁâπÂæ¥„ÅØ„ÄåÔºà„Åì„Åì„Å´ÁâπÂæ¥„ÇíË®òÂÖ•Ôºâ„Äç„Åß„Åô„ÄÇ„ÅäÂøÉÂΩì„Åü„Çä„ÅÆÊñπ„ÅØÊú¨ÈÉ®„Åæ„Åß„ÅîÈÄ£Áµ°„Åè„Å†„Åï„ÅÑ„ÄÇ',
};

type AlertType = keyof typeof alertTemplates;

module.exports = {
  data: new SlashCommandBuilder()
    .setName('safety')
    .setDescription('Manages emergency alerts.')
    .addSubcommand(subcommand =>
      subcommand
        .setName('alert')
        .setDescription('Posts an emergency alert.')
        .addStringOption(option =>
          option.setName('type')
            .setDescription('The type of alert to send.')
            .setRequired(true)
            .addChoices(
              { name: 'Fire - ÁÅ´ÁÅΩ', value: 'fire' },
              { name: 'Medical - ÊÄ•ÁóÖ‰∫∫', value: 'medical' },
              { name: 'Weather - ËçíÂ§©', value: 'weather' },
              { name: 'Lost Child - Ëø∑Â≠ê', value: 'lostchild' }
            )
        )
    )
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator), // Admin only
  async execute(interaction: CommandInteraction) {
    if (!interaction.isChatInputCommand()) return;

    if (interaction.options.getSubcommand() === 'alert') {
      const alertType = interaction.options.getString('type', true) as AlertType;
      const message = alertTemplates[alertType];

      if (message) {
        await interaction.reply({ content: `Sending the following alert:\n\n${message}` , ephemeral: true });
        // Using a more direct check to satisfy the type checker.
        if (interaction.channel && 'send' in interaction.channel) {
          await interaction.channel.send(message);
        }
      } else {
        await interaction.reply({ content: 'Invalid alert type selected.', ephemeral: true });
      }
    }
  },
};
